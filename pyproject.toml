[tool.poetry]
name = "compiler"
version = "0.2.0"
description = ""
authors = ["L140-beep <kartoshka0302@mail.ru>"]
license = "GNU General Public License v3.0"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
aiofile = "3.8.7"
aiofiles = "23.1.0"
aiohttp = "3.8.4"
aiologger = "0.7.0"
aiopath = "0.6.11"
aioshutil =" 1.3"
asyncjson = "0.0.1"
pydantic = "^2.5.2"
xmltodict = "^0.13.0"
cyberiadaml-py = "^0.1.1"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
pytest = "7.3.2"
pytest-asyncio = "0.21.0"
pyright = "^1.1.338"
flake8-docstrings = "^1.7.0"
flake8-import-order = "^0.18.2"
flake8-quotes = "^3.4.0"
flake8-pyproject = "^1.2.3"

[tool.flake8]
import-order-style="pep8"
inline-quotes = "single"
ignore=["D107", "W504", "D301"]
include = ["compiler"]
exclude=[
    "**/__pycache__",
    ".mypy_cache",
    "**/fullgraphmlparser",
    "**/library",
    "**/schemas",
    "**/examples",
    "**/types"
]

[tool.pytest.ini_options]
testpaths = ["test"]

[tool.pyright]
include = ["compiler"]
exclude = [
    "**/__pycache__",
    ".mypy_cache",
    "**/fullgraphmlparser",
    "**/library",
    "**schemas",
]
reportMissingImports = "error"
typeCheckingMode = "standard"
reportUntypedFunctionDecorator = false
reportUnknownVariableType = false
reportUnknownMemberType = false
pythonVersion = "3.10"
pythonPlatform = "Linux"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"